services:

############################################################################################
######################                 infrastructure                 ######################
############################################################################################

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo stat | nc localhost 2181" ]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  ############################################################################################
  ######################                    services                    ######################
  ############################################################################################

  gateway:
    container_name: gateway-service
    restart: always
    build: gateway-service/
    ports:
      - 8000:8000
    networks:
      app-network:
        ipv4_address: 172.15.0.7

  test-service:
    container_name: test-service
    build: test-service/
    ports:
      - 8081:8081
    networks:
      app-network:
        ipv4_address: 172.15.0.8

  test-service2:
    container_name: test-service2
    build: test-service2/
    ports:
      - 8082:8082
    networks:
      app-network:
        ipv4_address: 172.15.0.9

  test-service3:
    container_name: test-service3
    build: test-service3/
    ports:
      - 8083:8083
    networks:
      app-network:
        ipv4_address: 172.15.0.10


networks:
  kafka-network:
    driver: bridge

  app-network:
    name: app-network
    ipam:
      driver: default
      config:
        - subnet: 172.15.0.0/24